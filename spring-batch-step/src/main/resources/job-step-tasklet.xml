<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:bean="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">
	<bean:import resource="classpath:job-context.xml" />
	<!-- 定义父step -->
	<step id="abstractParentStep" abstract="true">
		<tasklet transaction-manager="transactionManager">
			<chunk reader="csvItemReader" writer="csvItemWriter"
				commit-interval="5"></chunk>
		</tasklet>
	</step>

	<!-- restartable 支持重新启动 -->
	<job id="billJob" restartable="false">
		<!-- 继承父step，并覆盖父类的commit-interval -->
		<step id="billStep" parent="abstractParentStep">
			<tasklet>
				<chunk processor="creditBillProcessor" commit-interval="2"></chunk>
			</tasklet>
			<!-- step拦截器 -->
			<listeners>
				<listener ref="sysoutStepListener"></listener>
			</listeners>
		</step>
		<!-- 拦截器列的顺序即为拦截器执行的顺序 -->
		<listeners>
			<listener ref="sysoutListener"></listener>
			<listener ref="sysoutAnnotationListener"></listener>
		</listeners>
	</job>
	<!-- 示例：重启，设置start-limit参数 -->
	<job id="startLimitJob">
		<step id="startLimitStep">
			<tasklet start-limit="1">
				<chunk reader="csvItemReader" processor="creditBillProcessor"
					writer="csvItemWriter" commit-interval="5"></chunk>
			</tasklet>
		</step>
	</job>

	<!-- 多线程 -->
	<job id="mulitThreadJob">
		<step id="mulitThreadStep">
			<tasklet start-limit="1" task-executor="taskExecutor"
				throttle-limit="5">
				<chunk reader="csvItemReader" processor="creditBillProcessor"
					writer="csvItemWriter" commit-interval="5"></chunk>
			</tasklet>
		</step>
	</job>
	<bean:bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<bean:property name="corePoolSize" value="6" />
		<bean:property name="maxPoolSize" value="6" />
	</bean:bean>

	<!-- 自定义 Tasklet -->
	<job id="customTaskletJob">
		<step id="customTaskletStep">
			<tasklet ref="helloworldTasklet"></tasklet>
		</step>
	</job>

	<!-- tasklet系统实现： 1、CallableTaskletAdapter 2、ChunkOrientedTasklet 3、MethodInvokingTaskletAdapter 
		4、SystemCommandTasklet -->
	<job id="taskletAdapterJob">
		<step id="taskletAdapterStep">
			<tasklet ref="adapter"></tasklet>
		</step>
	</job>

	<bean:bean id="adapter"
		class="org.springframework.batch.core.step.tasklet.MethodInvokingTaskletAdapter">
		<bean:property name="targetObject" ref="testTaskletAdapter" />
		<bean:property name="targetMethod" value="sysHello" />
	</bean:bean>

	<bean:bean id="csvItemReader"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<bean:property name="resource"
			value="classpath:credit-card-bill-201303.csv"></bean:property>
		<bean:property name="lineMapper">
			<bean:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<bean:property name="lineTokenizer" ref="lineTokenizer" />
				<bean:property name="fieldSetMapper">
					<bean:bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<bean:property name="prototypeBeanName" value="creditBill" />
					</bean:bean>
				</bean:property>
			</bean:bean>
		</bean:property>
	</bean:bean>
	<bean:bean id="lineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<bean:property name="delimiter" value="," />
		<bean:property name="names">
			<bean:list>
				<bean:value>accountID</bean:value>
				<bean:value>name</bean:value>
				<bean:value>amount</bean:value>
				<bean:value>date</bean:value>
				<bean:value>address</bean:value>
			</bean:list>
		</bean:property>


	</bean:bean>

	<bean:bean id="creditBillProcessor"
		class="fun.deepsky.springbatch.step.CreditBillProcessor" />

	<bean:bean id="csvItemWriter"
		class="org.springframework.batch.item.file.FlatFileItemWriter">
		<bean:property name="resource" value="file:target/outPutFile.csv" />
		<bean:property name="lineAggregator">
			<bean:bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<bean:property name="delimiter" value="," />
				<bean:property name="fieldExtractor">
					<bean:bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<bean:property name="names"
							value="accountID,name,amount,date,address">
						</bean:property>
					</bean:bean>
				</bean:property>
			</bean:bean>
		</bean:property>
	</bean:bean>

	<bean:bean id="creditBill" class="fun.deepsky.springbatch.step.CreditBill">
	</bean:bean>

	<bean:bean id="sysoutListener"
		class="fun.deepsky.springbatch.job.listener.SystemOutJobExecutionListener">
	</bean:bean>
	<bean:bean id="sysoutAnnotationListener"
		class="fun.deepsky.springbatch.job.listener.SystemOutAnnotationListener">
	</bean:bean>
	<bean:bean id="sysoutStepListener"
		class="fun.deepsky.springbatch.step.listener.SystemOutStepExecutionListener">
	</bean:bean>

	<bean:bean id="helloworldTasklet"
		class="fun.deepsky.springbatch.step.customtasklet.HelloWorldTasklet" />
	<bean:bean id="testTaskletAdapter"
		class="fun.deepsky.springbatch.step.taskletadapter.TestTaskletAdapter">
	</bean:bean>

</bean:beans>