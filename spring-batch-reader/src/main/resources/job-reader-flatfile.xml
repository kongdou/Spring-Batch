<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:bean="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">
	<bean:import resource="classpath:job-context.xml" />
	<!-- 定义job -->
	<job id="flatFileJob">
		<step id="flatFileStep">
			<tasklet transaction-manager="transactionManager">
				<chunk reader="flatFileItemReader" writer="csvItemWriter"
					processor="creditBillProcessor" commit-interval="2">
				</chunk>
			</tasklet>
		</step>
	</job>

	<!-- 定义reader，使用FlatFileItemReader -->
	<bean:bean id="flatFileItemReader" scope="step"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<!-- 资源路径 -->
		<bean:property name="resource"
			value="classpath:/data/flat/credit-card-bill-201303-complex.csv" />
		<!-- 将一行记录转成java对象 -->
		<bean:property name="lineMapper" ref="lineMapper" />
		<!-- 编码，默认是UTF-8 -->
		<bean:property name="encoding" value="UTF-8" />
		<!-- 资源不存在时，处理方式，true表示如果文件不存在，抛出异常 -->
		<bean:property name="strict" value="true" />
		<!-- 定义跳过文件的行数 -->
		<bean:property name="linesToSkip" value="1" />
		<!-- 处理跳过的行 -->
		<bean:property name="skippedLinesCallback" ref="lineCallbackHandler" />
		<!-- 注释分隔，会忽略配置的分隔符 -->
		<bean:property name="comments">
			<bean:list>
				<bean:value>##</bean:value>
				<bean:value>$$</bean:value>
			</bean:list>
		</bean:property>
		<!-- 定义文件如何区分记录 -->
		<bean:property name="recordSeparatorPolicy" ref="simpleRecordSeparatorPolicy" />
	</bean:bean>

	<!-- 定义processor -->
	<bean:bean id="creditBillProcessor"
		class="fun.deepsky.springbatch.reader.flat.CreditBillProcessor" scope="step" />

	<!-- 定义writer -->
	<bean:bean id="csvItemWriter"
		class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<bean:property name="resource" value="file:target/outputFile.csv" />
		<!-- 行聚合器 -->
		<bean:property name="lineAggregator">
			<bean:bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<bean:property name="delimiter" value="," />
				<bean:property name="fieldExtractor">
					<bean:bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<bean:property name="names"
							value="accountID,name,amount,date,address" />
					</bean:bean>
				</bean:property>
			</bean:bean>
		</bean:property>
	</bean:bean>

	<bean:bean id="lineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<bean:property name="lineTokenizer" ref="lineTokenizer" />
		<bean:property name="fieldSetMapper" ref="fieldSetMapper" />
	</bean:bean>

	<bean:bean id="lineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<bean:property name="delimiter" value="," />
		<bean:property name="names" value="accountID,name,amount,date,address" />
	</bean:bean>

	<bean:bean id="fieldSetMapper"
		class="fun.deepsky.springbatch.reader.flat.CreditBillFieldSetMapper">

	</bean:bean>
	<bean:bean id="lineCallbackHandler"
		class="fun.deepsky.springbatch.reader.flat.DefaultLineCallbackHandler"></bean:bean>
		
	<bean:bean id="simpleRecordSeparatorPolicy"
		class="org.springframework.batch.item.file.separator.SimpleRecordSeparatorPolicy" />
</bean:beans>