<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:bean="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util.xsd">
	<bean:import resource="classpath:job-jdbc-context.xml" />
	<!-- 定义job -->
	<job id="dbReadJob">
		<step id="dbReadStep">
			<tasklet transaction-manager="transactionManager">
				<chunk reader="jdbcCustomParameterItemReader" processor="creditBillProcessor"
					writer="creditItemWriter" commit-interval="2">
				</chunk>
			</tasklet>
		</step>
	</job>

	<!-- jdbcItemReader -->
	<bean:bean id="jdbcItemReader" scope="step"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<bean:property name="dataSource" ref="dataSource" />
		<bean:property name="sql"
			value="select ID,ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS from t_credit where id between 1 and 10" />
		<bean:property name="rowMapper">
			<bean:bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
				<bean:property name="mappedClass"
					value="fun.deepsky.springbatch.reader.CreditBill" />
			</bean:bean>
		</bean:property>
	</bean:bean>

	<!-- jdbcItemReader 参数绑定 -->
	<bean:bean id="jdbcParameterItemReader" scope="step"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<bean:property name="dataSource" ref="dataSource" />
		<bean:property name="sql"
			value="select ID,ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS from t_credit where id between 1 and ?" />
		<!-- 自定义rowMapper -->
		<bean:property name="rowMapper" ref="customCreditRowMapper" />
		<bean:property name="preparedStatementSetter" ref="parameterSetter" />
	</bean:bean>
	<bean:bean id="customCreditRowMapper"
		class="fun.deepsky.springbatch.reader.db.CustomCreditRowMapper" />
	<bean:bean id="parameterSetter"
	class="org.springframework.batch.core.resource.ListPreparedStatementSetter"
	scope="step">
		<bean:property name="parameters">
			<bean:list>
				<bean:value>#{jobParameters['id']}</bean:value>
			</bean:list>
		</bean:property>
	</bean:bean>
	<bean:bean id="jdbcCustomParameterItemReader" scope="step"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<bean:property name="dataSource" ref="dataSource" />
		<bean:property name="sql"
			value="select ID,ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS from t_credit where id between 1 and ?" />
		<!-- 自定义rowMapper -->
		<bean:property name="rowMapper" ref="customCreditRowMapper" />
		<bean:property name="preparedStatementSetter" ref="custPreparedStatementSetter" />
	</bean:bean>
	<bean:bean id="custPreparedStatementSetter" class="fun.deepsky.springbatch.reader.db.CustPreparedStatementSetter">
	
	</bean:bean>
	<bean:bean id="creditBillProcessor"
		class="fun.deepsky.springbatch.reader.db.CreditBillProcessor" />
	<bean:bean id="creditItemWriter"
		class="fun.deepsky.springbatch.reader.db.CreditItemWriter" />

</bean:beans>